import{r as a,o as e,c as n,a as l,F as r,b as t,d as i}from"./app.ea66aa66.js";const o={},s=l("h4",{id:"前言",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),t(" 前言")],-1),c=l("p",null,"最近在接触阿里百川SDK过程中，发现一些问题觉得有必要通过文档让大家了解下，首先看下阿里百川是什么？ 阿里百川开放淘系电商能力，帮助APP开发者在各种场景下快速、低成本搭建无线电商导购业务，开发用户消费需求，实现商业变现。",-1),p=l("h4",{id:"接入准备",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#接入准备","aria-hidden":"true"},"#"),t(" 接入准备")],-1),d=t("建议阅读下官方文档中的"),u={href:"https://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.470bbe48GhqZ4k&treeId=129&articleId=104528&docType=1",target:"_blank",rel:"noopener noreferrer"},g=t("接入指南"),m=t("，有相关介绍这里就不累赘，主要提下重点要注意的。"),h=l("p",null,[l("code",null,"安全图片"),t(" ： 务必按要求配置好安全图片，并放入项目中。安全图片其实就是将项目签名，包名等信息存储在图片中，编译启动时进行校验，图片名称必须按照规定。 如果有多个项目，务必选择好对应的项目，否则会导致鉴于不匹配情况。")],-1),b=l("h4",{id:"开始集成sdk",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#开始集成sdk","aria-hidden":"true"},"#"),t(" 开始集成SDK")],-1),P=l("li",null,[l("p",null,"安全图片放入项目中，图片名为yw_1222.jpg")],-1),S=l("p",null,"推荐使用Cocoapod方式接入SDK",-1),w=l("div",{class:"language-text ext-text"},[l("pre",{class:"language-text"},[l("code",null,"终端中执行以下命令，添加百川的源\npod repo add AliBCSpecs http://repo.baichuan-ios.taobao.com/baichuanSDK/AliBCSpecs.git\n")])],-1),T=l("div",{class:"language-text ext-text"},[l("pre",{class:"language-text"},[l("code",null,"Podfile添加(具体版本以百川开发者网站为准)\nsource 'http://repo.baichuan-ios.taobao.com/  baichuanSDK/AliBCSpecs.git'\npod 'AlibcTradeSDK'\n")])],-1),A=t("手动方式引入SDK参考"),k={href:"https://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.45f8be48T93N9B&treeId=129&articleId=105648&docType=1",target:"_blank",rel:"noopener noreferrer"},x=t("文档"),K=t(",这里就不讲了。"),v=l("p",null,"配置URL Types",-1),D=l("p",null,"URL Scheme为tbopen{AppKey},如tbopen123456",-1),X=l("p",null,"是在阿里百川注册的应用AppKey",-1),f=l("p",null,"Info.plist配置",-1),y=l("div",{class:"language-text ext-text"},[l("pre",{class:"language-text"},[l("code",null,"在info.plist中,增加LSApplicationQueriesSchemes字段,并添加tbopen,tmall\n")])],-1),I=t(),_=i('<div class="language-text ext-text"><pre class="language-text"><code>配置ATS，允许HTTP请求\n</code></pre></div><ul><li><p>SDK初始化 在 AppDelegate 中初始化SDK</p><div class="language-text ext-text"><pre class="language-text"><code>import &lt;AlibcTradeSDK/AlibcTradeSDK.h&gt;\n\n- (BOOL)application:(UIApplication *)application {\n    // 百川平台基础SDK初始化，加载并初始化各个业务能力插件\n    [[AlibcTradeSDK sharedInstance] asyncInitWithSuccess:^{\n         \n    } failure:^(NSError *error) {\n        NSLog(@&quot;Init failed: %@&quot;, error.description);\n    }];\n     \n    // 开发阶段打开日志开关，方便排查错误信息\n    //默认调试模式打开日志,release关闭,可以不调用下面的函数\n    [[AlibcTradeSDK sharedInstance] setDebugLogOpen:YES];\n     \n    // 配置全局的淘客参数\n    //如果没有阿里妈妈的淘客账号,setTaokeParams函数需要调用\n    AlibcTradeTaokeParams *taokeParams = [[AlibcTradeTaokeParams alloc] init];\n    taokeParams.pid = @&quot;mm_XXXXX&quot;; //mm_XXXXX为你自己申请的阿里妈妈淘客pid\n    [[AlibcTradeSDK sharedInstance] setTaokeParams:taokeParams];\n     \n    //设置全局的app标识，在电商模块里等同于isv_code\n    //没有申请过isv_code的接入方,默认不需要调用该函数\n    [[AlibcTradeSDK sharedInstance] setISVCode:@&quot;your_isv_code&quot;];\n     \n    // 设置全局配置，是否强制使用h5\n    [[AlibcTradeSDK sharedInstance] setIsForceH5:NO];\n \n    return YES;\n}\n</code></pre></div></li><li><p>处理应用跳转</p><p>为了正常使用百川内置的应用跳转处理，需要调用百川SDK的方法。建议优先调用百川处理，如果百川已处理，可以直接返回YES；当然，也可以继续处理，比如记录应用跳转来源日志等。 以下代码不现实,会导致通过手淘授权登陆,跳回来没反应等问题</p><div class="language-text ext-text"><pre class="language-text"><code>// iOS9以下的实现这个方法，如果需要兼容iOS9以下的话\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation{\n    /* 老接口写法 已弃用，建议使用新接口\n    if (![[AlibcTradeSDK sharedInstance] handleOpenURL:url]) {\n        // 处理其他app跳转到自己的app\n    }\n    return YES;\n    */\n \n    // 新接口写法\n    if (![[AlibcTradeSDK sharedInstance] application:application \n                                             openURL:url \n                                   sourceApplication:sourceApplication \n                                          annotation:annotation]) {\n        // 处理其他app跳转到自己的app\n    }\n    return YES;\n</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>    // iOS9以上的实现这个方法\n    - (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary&lt;NSString *,id&gt; *)options {\n     \n    /* 老接口写法 已弃用，建议使用新接口\n    if (![[AlibcTradeSDK sharedInstance] handleOpenURL:url]) {\n        // 处理其他app跳转到自己的app\n    }\n    return YES;\n    */\n \n    // 新接口写法\n    if (![[AlibcTradeSDK sharedInstance] application:application\n                                             openURL:url\n                                             options:options]) {\n        //处理其他app跳转到自己的app，如果百川处理过会返回YES\n    }\n    return YES;} \n</code></pre></div></li><li><p>方法说明</p><div class="language-text ext-text"><pre class="language-text"><code>/**\n * 使用isv自己的webview打开page，可以实现淘宝账号免登以及电商交易支付流程\n *\n * @param parentController            webView所在的view controller.\n * @param webView                     isv自己的webview,请先设置好自己的delegate先调用本接口,否则拦截登陆等逻辑会失效\n * @param page                        想要打开的page\n * @param showParams                  打开方式的一些自定义参数\n * @param taoKeParams                 淘客参数\n * @param trackParam                  链路跟踪参数\n * @param tradeProcessSuccessCallback 交易流程中成功回调(加购成功/发生支付)\n * @param tradeProcessFailedCallback  交易流程中退出或者调用发生错误的回调\n *\n * @return  0:  标识跳转到手淘打开了\n            1:  标识用h5打开\n           -1:  标识出错\n */\n- (NSInteger)           show:(UIViewController * __nonnull)parentController\n                     webView:(nullable UIWebView*)webView\n                        page:(id&lt;AlibcTradePage&gt; __nonnull)page\n                  showParams:(nullable AlibcTradeShowParams*)showParams\n                 taoKeParams:(nullable AlibcTradeTaokeParams *)taoKeParams\n                  trackParam:(nullable NSDictionary*)trackParam\n tradeProcessSuccessCallback:(nullable void (^)(AlibcTradeResult * __nullable result))onSuccess\n  tradeProcessFailedCallback:(nullable void (^)(NSError * __nullable error))onFailure;\n</code></pre></div></li></ul><div class="language-text ext-text"><pre class="language-text"><code>    showParams 参数\n    \n    1. 调起手淘\n    AlibcTradeShowParams* showParam = [[AlibcTradeShowParams alloc] init];\n   showParam.openType = AlibcOpenTypeNative;\n   // showParam.backUrl=@&quot;tbopenXXXXX://&quot;; // 官方文档的有问题\n   showParam.backUrl=@&quot;tbopenXXXXX&quot;; // 亲测有效\n   showParam.isNeedPush=isNeedPush;  \n                     \n   2. 调起天猫\n   AlibcTradeShowParams* showParam = [[AlibcTradeShowParams alloc] init];\n   showParam.openType = AlibcOpenTypeNative;\n   // showParam.backUrl=@&quot;tbopenXXXXX://&quot;; // 官方文档的有问题\n   showParam.backUrl=@&quot;tbopenXXXXX&quot;; // 亲测有效\n   showParam.isNeedPush=isNeedPush;\n   showParam.linkKey = @&quot;tmall_scheme&quot;;//拉起天猫\n</code></pre></div><pre><code>```\npage参数 page详情页可以通过自己WebView显示，也可以使用SDK定制的\n其中page参数用于指定需要打开的页面,可以使用的页面类型如下表,由AlibcTradePageFactory生成：\n\n//打开SDK定制商品详情页\nid&lt;AlibcTradePage&gt; page = [AlibcTradePageFactory itemDetailPage: @”123456”];\n \n//根据链接打开页面\nid&lt;AlibcTradePage&gt; page = [AlibcTradePageFactory page: @&quot;http://h5.m.taobao.com/cm/snap/index.html?id=527140984722&quot;];\n \n//打开店铺\nid&lt;AlibcTradePage&gt; page = [AlibcTradePageFactory shopPage: @”12333333”];\n \n \n//淘客信息\nAlibcTradeTaokeParams *taoKeParams=[[AlibcTradeTaokeParams alloc] init];\ntaoKeParams.pid=nil; //\n//打开方式\nAlibcTradeShowParams* showParam = [[AlibcTradeShowParams alloc] init];\nshowParam.openType = AlibcOpenTypeAuto;\n \n[[AlibcTradeSDK sharedInstance].tradeService show: self.navigationController page:page showParams:showParam taoKeParams: nil trackParam: trackParam tradeProcessSuccessCallback:self.onTradeSuccess tradeProcessFailedCallback:self.onTradeFailure];\n```\n\n```\n自定义WebView显示详情页\n\nid&lt;AlibcTradePage&gt; page = [AlibcTradePageFactory itemDetailPage: @”123456”];\n//淘客信息\nAlibcTradeTaokeParams *taoKeParams=[[AlibcTradeTaokeParams alloc] init];\ntaoKeParams.pid= nil;\n//打开方式\nAlibcTradeShowParams* showParam = [[AlibcTradeShowParams alloc] init];\nshowParam.openType = AlibcOpenTypeAuto;\n \n \n// YourWebViewController类中,webview的delegate设置不能放在viewdidload里面,必须在init的时候,否则函数调用的时候还是nil\n  YourTradeWebViewController* myView = [[YourTradeWebViewController alloc] init];\n   \n \n NSInteger ret = [[AlibcTradeSDK sharedInstance].tradeService show: myView webView: myView.webView page:page showParams:showParam taoKeParams: taoKeParams trackParam:nil tradeProcessSuccessCallback:self.onTradeSuccess tradeProcessFailedCallback:self.onTradeFailure];\n //返回1,说明h5打开,否则不应该展示页面\n if (ret == 1) {\n       [self.navigationController pushViewController:view animated:YES];\n }\n```\n</code></pre><h4 id="注意点" tabindex="-1"><a class="header-anchor" href="#注意点" aria-hidden="true">#</a> 注意点：</h4><p>官网文档基本讲的非常清楚，但在开发中才会遇到一点坑，这边在最后给大家讲讲我在对接过程中遇到的问题，帮大家规避，我遇到的问题也花了不少时间解决，阿里的SDK有个毛病，就是客服太难联系上，而且只留个旺旺群，还得下载个旺信，加群，然后群里也没人回复解答，最近自己只能靠自己。</p><ul><li><code>安全图片</code>，如果不是你接的SDK，或者未对该图片了解和备注，很可能把图片当成废弃的删了，有朋友就遇到这个问题，删了APP上线无法跳转到手淘，就比较坑了，在这里特别提醒大家一下，建议在项目中用个文件夹装着，引入项目中，文件夹后面加上中文备注。</li></ul>',7),C=l("ul",null,[l("li",null,[l("code",null,"backUrl"),t("设置有误，导致跳转到手淘，然后点击返回，回不来App")])],-1),U=l("pre",null,[l("code",null,"上面是官方文档的写法，一开始也是对照文档这么配置backUrl，结果就是在手淘点返回一直回不来，期间花了不少时间，重新对文档，查配置情况，一无所获。后来试着改成下面这样，就OK了!\n")],-1),q=l("p",null,"希望这篇文章能给到大家一些帮助，如有疑问欢迎一同来学习交流。QQ群:912759811。",-1);o.render=function(t,i){const o=a("OutboundLink");return e(),n(r,null,[s,c,p,l("p",null,[d,l("a",u,[g,l(o)]),m]),h,l("img",{src:t.$withBase("/ios/sdk/Snip20190822_1.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"]),b,l("ul",null,[P,l("li",null,[S,w,T,l("p",null,[A,l("a",k,[x,l(o)]),K])]),l("li",null,[v,D,X,l("img",{src:t.$withBase("/ios/sdk/1566457415236.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"])]),l("li",null,[f,y,I,l("img",{src:t.$withBase("/ios/sdk/Snip20190822_3.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"])])]),_,l("img",{src:t.$withBase("/ios/sdk/Snip20190822_6.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"]),C,l("img",{src:t.$withBase("/ios/sdk/Snip20190822_7.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"]),U,l("img",{src:t.$withBase("/ios/sdk/Snip20190822_9.png"),alt:"https://img01.jituwang.com/171030/256786-1G030214S965.jpg"},null,8,["src"]),q],64)};export default o;
