import{d as n}from"./app.ea66aa66.js";const s={},a=n('<h4 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h4><p>在开发中我们经常需要用到KVO，但KVO一旦使用不当，会造成致命性的问题-崩溃。</p><p>在开发中KVO尝试过很多方法来使用KVO，有init方法中添加，dealloc方法中移除，如果有问题，在搞个布尔值标记下，网上很多方法在使用中可能场景和需求不一样，效果不保险感觉。</p><h4 id="方案" tabindex="-1"><a class="header-anchor" href="#方案" aria-hidden="true">#</a> 方案</h4><p>今天偶尔看到MJRefresh框架在对KVO的处理，通过了解并Demo演练，发现这种方法非常不错，故此推荐给大家。</p><div class="language-objc ext-objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>willMoveToSuperview<span class="token punctuation">:</span><span class="token punctuation">(</span>UIView <span class="token operator">*</span><span class="token punctuation">)</span>newSuperview；\n</code></pre></div><p>这是系统的方法，当视图将要添加到父视图上，或将要从父视图上移除时会调用。在这个方法处理监听的添加和移除。<a href="">Demo下载</a> 先上代码</p><div class="language-objc ext-objc"><pre class="language-objc"><code><span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>willMoveToSuperview<span class="token punctuation">:</span><span class="token punctuation">(</span>UIView <span class="token operator">*</span><span class="token punctuation">)</span>newSuperview\n<span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token keyword">super</span> willMoveToSuperview<span class="token punctuation">:</span>newSuperview<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    \n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%s&quot;</span><span class="token punctuation">,</span><span class="token constant">__func__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token punctuation">[</span><span class="token keyword">self</span> removeObserver<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">if</span><span class="token punctuation">(</span>newSuperview<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span>newSuperview isKindOfClass<span class="token punctuation">:</span><span class="token punctuation">[</span>ObserverView class<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            _obView <span class="token operator">=</span> <span class="token punctuation">(</span>ObserverView <span class="token operator">*</span><span class="token punctuation">)</span>newSuperview<span class="token punctuation">;</span>\n            \n            <span class="token punctuation">[</span><span class="token keyword">self</span> addObserver<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>addObserver\n<span class="token punctuation">{</span>\n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%s&quot;</span><span class="token punctuation">,</span><span class="token constant">__func__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    NSKeyValueObservingOptions options <span class="token operator">=</span> NSKeyValueObservingOptionNew<span class="token punctuation">;</span>\n    <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>obView addObserver<span class="token punctuation">:</span><span class="token keyword">self</span> forKeyPath<span class="token punctuation">:</span><span class="token string">@&quot;clickCount&quot;</span> options<span class="token punctuation">:</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> context<span class="token punctuation">:</span>nil<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>removeObserver\n<span class="token punctuation">{</span>\n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%s&quot;</span><span class="token punctuation">,</span><span class="token constant">__func__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;%@  --  %@&quot;</span><span class="token punctuation">,</span><span class="token keyword">self</span><span class="token punctuation">.</span>obView<span class="token punctuation">,</span><span class="token keyword">self</span><span class="token punctuation">.</span>superview<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    \n    <span class="token comment">/**\n     ！ 切记 这里必须用self.superview\n     self.obView 在这个时候已经是nill\n     */</span>\n<span class="token comment">//    [self.obView removeObserver:self forKeyPath:@&quot;clickCount&quot;];</span>\n    <span class="token punctuation">[</span><span class="token keyword">self</span><span class="token punctuation">.</span>superview removeObserver<span class="token punctuation">:</span><span class="token keyword">self</span> forKeyPath<span class="token punctuation">:</span><span class="token string">@&quot;clickCount&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>observeValueForKeyPath<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>keyPath ofObject<span class="token punctuation">:</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>object change<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary<span class="token operator">&lt;</span>NSKeyValueChangeKey<span class="token punctuation">,</span>id<span class="token operator">&gt;</span> <span class="token operator">*</span><span class="token punctuation">)</span>change context<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>context\n<span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">[</span>keyPath isEqualToString<span class="token punctuation">:</span><span class="token string">@&quot;clickCount&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">self</span><span class="token punctuation">.</span>textlabel<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token punctuation">[</span>NSString stringWithFormat<span class="token punctuation">:</span><span class="token string">@&quot;%ld&quot;</span><span class="token punctuation">,</span><span class="token keyword">self</span><span class="token punctuation">.</span>obView<span class="token punctuation">.</span>clickCount<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        \n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="总结和注意点" tabindex="-1"><a class="header-anchor" href="#总结和注意点" aria-hidden="true">#</a> 总结和注意点:</h4><div class="language-text ext-text"><pre class="language-text"><code>总结和注意点:\n可在willMoveToSuperview: 添加和移除监听者\n \n 1. 需要调用super willMoveToSuperview\n 2. 需要先移除 监听者 removeObserver\n 3. 然后在willMoveToSuperview 参数 newSuperview 有值 设置监听者 addObserver\n 4. removeObserver 内如果是监听的父类，在这里必须写self.super 因为自己设置的属性指向父类，在这里属性是没值的\n</code></pre></div>',10);s.render=function(n,s){return a};export default s;
